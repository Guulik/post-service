// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/comments.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	model "posts/internal/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPostProvider is a mock of PostProvider interface.
type MockPostProvider struct {
	ctrl     *gomock.Controller
	recorder *MockPostProviderMockRecorder
}

// MockPostProviderMockRecorder is the mock recorder for MockPostProvider.
type MockPostProviderMockRecorder struct {
	mock *MockPostProvider
}

// NewMockPostProvider creates a new mock instance.
func NewMockPostProvider(ctrl *gomock.Controller) *MockPostProvider {
	mock := &MockPostProvider{ctrl: ctrl}
	mock.recorder = &MockPostProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostProvider) EXPECT() *MockPostProviderMockRecorder {
	return m.recorder
}

// GetPostById mocks base method.
func (m *MockPostProvider) GetPostById(id int) (model.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPostById", id)
	ret0, _ := ret[0].(model.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPostById indicates an expected call of GetPostById.
func (mr *MockPostProviderMockRecorder) GetPostById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPostById", reflect.TypeOf((*MockPostProvider)(nil).GetPostById), id)
}
